poly(KHOU,2):month + poly(KHOU,2):wday + poly(KHOU,2):hour, data=load_train)
rmse(lm6, load_train)
rmse(lm6, load_test)
# what about an interaction between time of day and month?
# this accounts for differeing patterns of darkness at, say, 6 PM from one month to the next
lm7 = lm(COAST ~ poly(KHOU,2) + month + weeks_elapsed +
hour + wday + hour:wday +
poly(KHOU,2):month + poly(KHOU,2):wday + poly(KHOU,2):hour +
hour:month, data=load_train)
rmse(lm7, load_train)
rmse(lm7, load_test)
rmse_sim = do(10)*{
# fresh train/test split
load_split =  initial_split(load_combined, prop=0.8)
load_train = training(load_split)
load_test  = testing(load_split)
# refit our models to this particular split
# we're using "update" here to avoid having to type out the giant model formulas
lm5 = update(lm5, data=load_train)
lm6 = update(lm6, data=load_train)
lm7 = update(lm7, data=load_train)
# collect the model errors in a single vector
model_errors = c(rmse(lm5, load_test), rmse(lm6, load_test), rmse(lm7, load_test))
# return the model errors
model_errors
}
# average performance across the splits:
# looks like the giant model is a little bit better...
colMeans(rmse_sim)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(estimatr)
rm(mrc_table1)
mrc_table1<-read.csv("mrc_table1.csv", header = TRUE, sep = ",")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(estimatr)
rm(mrc_table1)
mrc_table1<-read.csv("mrc_table1.csv", header = TRUE, sep = ",")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(estimatr)
mrc_table1<-read.csv("mrc_table1.csv", header = TRUE, sep = ",")
mrc_table1<-read.csv("mrc_table1.csv", header = TRUE, sep = ",")
clean_mrc_table1 = mrc_table1 %>% select(super_opeid, name, state, par_median, k_median)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(estimatr)
mrc_table1<-read.csv("mrc_table1.csv", header = TRUE, sep = ",")
setwd("/Users/home/Dropbox/UT/2022_Spring/ECO 395M_CAUSAL INFERENCE/Homework/HW #1")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(estimatr)
mrc_table1<-read.csv("mrc_table1.csv", header = TRUE, sep = ",")
clean_mrc_table1 = mrc_table1 %>% select(super_opeid, name, state, par_median, k_median)
clean_mrc_table1 %>%
summarize(Avg_k_median=mean(k_median),
Avg_par_median=mean(par_median),
sd_k_median=sd(k_median),
sd_par_median=sd(par_median),
cor(k_median, par_median))
library(tidyverse)
library(ggplot2)
library(dplyr)
library(estimatr)
mrc_table1<-read.csv("mrc_table1.csv", header = TRUE, sep = ",")
clean_mrc_table1 = mrc_table1 %>% select(super_opeid, name, state, par_median, k_median)
clean_mrc_table1 %>%
summarize(Avg_k_median=mean(k_median),
Avg_par_median=mean(par_median),
sd_k_median=sd(k_median),
sd_par_median=sd(par_median),
cor(k_median, par_median))
mrc_table10<-read.csv("mrc_table10.csv", header = TRUE, sep = ",")
clean_mrc_table10=mrc_table10 %>%
select(super_opeid, public, exp_instr_pc_2000)
clean_mrc_table10 %>%
summarize(Avg_exp_instr_pc_2000=mean(exp_instr_pc_2000, na.rm=TRUE),
sd_exp_instr_pc_2000=sd(exp_instr_pc_2000, na.rm=TRUE))
xtabs(~public, data=clean_mrc_table10)
mergeddata = merge(clean_mrc_table1, clean_mrc_table10, by = "super_opeid")
library(tidyr)
mergeddata = mergeddata %>%
drop_na()
mergeddata = filter(mergeddata, exp_instr_pc_2000 !="0")
mergeddata_aug = mergeddata %>%
mutate(log_par_median = log(par_median),
log_exp_instr_pc_2000 = log(exp_instr_pc_2000),
log_k_median = log(k_median))
lm_log_k_median = lm(log_k_median ~ log_exp_instr_pc_2000, data = mergeddata_aug)
coef(lm_log_k_median)
summary(lm_log_k_median)
ggplot(mergeddata_aug, aes(x=log_exp_instr_pc_2000, y=log_k_median)) +
geom_point()+
geom_smooth(method = 'lm')
lm_log_k_median2 = lm(log_k_median ~ log_exp_instr_pc_2000 + log_par_median, data=mergeddata_aug)
coef(lm_log_k_median2)
summary(lm_log_k_median2)
lm_log_exp_instr_pc_2000 = lm(log_exp_instr_pc_2000 ~ log_par_median, data = mergeddata_aug)
mergeddata_aug = mergeddata_aug %>%
mutate(residual_lm_log_exp_instr_pc_2000 = residuals(lm_log_exp_instr_pc_2000))
mergeddata_aug %>%
summarize(avg_exp_instr_pc_2000_residual = mean(residual_lm_log_exp_instr_pc_2000),
sd_exp_instr_pc_2000_residual = sd(residual_lm_log_exp_instr_pc_2000))
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
force(SaratogaHouses)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
saratoga_test-test(saratoga_split)
saratoga_split=initial_split(SaratogaHouses, prop = 0.85)
saratoga_train=training(saratoga_split)
saratoga_test-test(saratoga_split)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.85)
saratoga_train = training(saratoga_split)
saratoga_test = test(saratoga_split)
saratoga_test = testing(saratoga_split)
rmse(lm2, saratoga_test)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
lm1 = lm(price ~ lotSize + bedrooms + bathrooms, data=saratoga_train)
lm2 = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
lm3 = lm(price ~ (. - pctCollege - sewer - waterfront - landValue - newConstruction)^2, data=saratoga_train)
coef(lm1) %>% round(0)
coef(lm2) %>% round(0)
coef(lm3) %>% round(0)
rmse(lm1, saratoga_test)
rmse(lm2, saratoga_test)
rmse(lm3, saratoga_test)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.85)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
lm_medium = lm(lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train))
rmse(lm_medium)
lm_medium = lm(lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train))
rmse(lm_medium, saratoga_test)
rmse(lm2, saratoga_test)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
lm_medium = lm(lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train))
rmse(lm_medium, saratoga_test)
lm_medium = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train))
lm_medium = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
rmse(lm_medium, saratoga_test)
View(SaratogaHouses)
lm_improved - lm(price ~ (. - bathrooms - pctCollege - fireplaces + fireplaces*bedrooms )
lm_improved - lm(price ~ (. - bathrooms - pctCollege - fireplaces + fireplaces*bedrooms ))
lm_improved = lm(price ~ (. - bathrooms - pctCollege - fireplaces + fireplaces*bedrooms ))
lm_improved = lm(price ~ (. - bathrooms - pctCollege - fireplaces + fireplaces*bedrooms, data = saratoga_test))
lm_improved = lm(price ~ . - bathrooms - pctCollege - fireplaces + fireplaces*bedrooms, data = saratoga_test)
rmse(lm_improved, saratoga_test)
lm_improved = lm(price ~ . - bathrooms - pctCollege - fireplaces + fireplaces*bedrooms + lotSize*landValue, data = saratoga_test)
rmse(lm_improved, saratoga_test)
lm_improved = lm(price ~ . - bathrooms - pctCollege - fireplaces - rooms + fireplaces*bedrooms + lotSize*landValue, data = saratoga_test)
rmse(lm_improved, saratoga_test)
lm_improved = lm(price ~ . - bathrooms - pctCollege - fireplaces + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue, data = saratoga_test)
rmse(lm_improved, saratoga_test)
lm_improved = lm(price ~ . - bathrooms - pctCollege - fireplaces - newConstruction + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue, data = saratoga_test)
rmse(lm_improved, saratoga_test)
lm_improved = lm(price ~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue, data = saratoga_test)
rmse(lm_improved, saratoga_test)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
lm_improved = lm(price ~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue, data = saratoga_test)
rmse(lm_improved, saratoga_test)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
lm_medium = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
rmse(lm_medium, saratoga_test)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
lm_medium = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
rmse(lm_medium, saratoga_test)
lm_improved = lm(price ~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue, data = saratoga_test)
rmse(lm_improved, saratoga_test)
loadhou = read.csv('../data/loadhou.csv')
setwd("/Users/home/Library/CloudStorage/Dropbox/UT/2022_Spring/ECO 395M_DATA MINING/Homework/HW#2")
# read in the data: make sure to use the path name to
# wherever you'd stored the file
loadhou = read.csv('../data/loadhou.csv')
# read in the data: make sure to use the path name to
# wherever you'd stored the file
loadhou = read.csv('../Data/loadhou.csv')
loadhou <- read.csv("~/Library/CloudStorage/Dropbox/UT/2022_Spring/ECO 395M_DATA MINING/Homework/HW#2/Data/loadhou.csv")
View(loadhou)
summary(loadhou)
# plot the data
ggplot(data = loadhou) +
geom_point(mapping = aes(x = KHOU, y = COAST), color='darkgrey') +
ylim(7000, 20000)
loadhou_split =  initial_split(loadhou, prop=0.8)
loadhou_train = training(loadhou_split)
loadhou_test  = testing(loadhou_split)
modelr::rmse(knn100, loadhou_test)
knn100 = knnreg(COAST ~ KHOU, data=loadhou_train, k=100)
library(tidyverse)
library(rsample)  # for creating train/test splits
library(caret)
library(modelr)
library(parallel)
library(foreach)
knn100 = knnreg(COAST ~ KHOU, data=loadhou_train, k=100)
modelr::rmse(knn100, loadhou_test)
xtrain = model.matrix(~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue, data=saratoga_train)
xtrain = model.matrix(~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue - 1, data=saratoga_train)
xtest = model.matrix(~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue - 1, data=saratoga_test)
xtrain = model.matrix(~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue - 1, data=saratoga_train)
xtest = model.matrix(~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtrain = model.matrix(~ .  - 1, data=saratoga_train)
xtest = model.matrix(~ .  - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
library(caret)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
View(xtilde_test)
View(xtest)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = df(xtilde_train)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.framef(xtilde_train)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.frame(xtilde_train)
xtilde_test_df = data.frame(xtilde_test)
?modelr
library(purrr)
View(saratoga_test)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.frame(xtilde_train)
xtilde_test_df = data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=25)
modelr::rmse(knn_saratoga, xtilde_test_df)
lm_improved_scaled = lm(price ~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue, data = xtilde_train_df)
View(xtilde_train_df)
lm_improved_scaled = lm(price ~ ., data = xtilde_train_df)
rmse(lm_improved_scaled, xtilde_test_df)
modelr::rmse(knn_saratoga, xtilde_test_df)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=100)
modelr::rmse(knn_saratoga, xtilde_test_df)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.frame(xtilde_train)
xtilde_test_df = data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=100)
modelr::rmse(knn_saratoga, xtilde_test_df)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.frame(xtilde_train)
xtilde_test_df = data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=500)
modelr::rmse(knn_saratoga, xtilde_test_df)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.frame(xtilde_train)
xtilde_test_df = data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=2)
modelr::rmse(knn_saratoga, xtilde_test_df)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.frame(xtilde_train)
xtilde_test_df = data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=25)
modelr::rmse(knn_saratoga, xtilde_test_df)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.frame(xtilde_train)
xtilde_test_df = data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=50)
modelr::rmse(knn_saratoga, xtilde_test_df)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.frame(xtilde_train)
xtilde_test_df = data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=100)
modelr::rmse(knn_saratoga, xtilde_test_df)
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
xtilde_train_df = data.frame(xtilde_train)
xtilde_test_df = data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=200)
modelr::rmse(knn_saratoga, xtilde_test_df)
head(xtrain)
head(xtrain, 2)
head(xtilde_train_df, 2)
head(xtrain, 2)
head(xtilde_train_df, 2)
head(xtrain, 2)
head(xtilde_train_df, 2)
head(xtrain, 2)
head(xtilde_train_df, 2)
head(xtrain, 2)
xtrain = model.matrix(~ . - 1, data=saratoga_train) %>%
data.frame(xtrain)
head(xtrain, 2)
xtest = model.matrix(~ . - 1, data=saratoga_test) %>%
data.frame(xtest)
xtrain = model.matrix(~ . - 1, data=saratoga_train) %>%
data.frame(xtrain)
xtest = model.matrix(~ . - 1, data=saratoga_test) %>%
data.frame(xtest)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train) %>%
data.frame(xtilde_train)
xtilde_test = scale(xtest, scale = scale_train) %>%
data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=200)
modelr::rmse(knn_saratoga, xtilde_test_df)
head(xtrain, 2)
head(xtilde_train_df, 2)
View(knn100)
View(knn_saratoga)
View(knn100)
SaratogaHouses = read.csv('data/SaratogaHouses.csv')
SaratogaHouses = read.csv(...'data/SaratogaHouses.csv')
setwd("/Users/home/Library/CloudStorage/Dropbox/UT/2022_Spring/ECO 395M_DATA MINING/Homework/HW#2/Data")
SaratogaHouses = read.csv(...'data/SaratogaHouses.csv')
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
library(caret)
library(purrr)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
glimpse(SaratogaHouses)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
library(caret)
library(purrr)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
library(caret)
library(purrr)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
lm_medium = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
rmse(lm_medium, saratoga_test)
lm_improved = lm(price ~ . - bathrooms - pctCollege - fireplaces + newConstruction*age + rooms*bedrooms + fireplaces*bedrooms + lotSize*landValue, data = saratoga_test)
rmse(lm_improved, saratoga_test)
xtrain = model.matrix(~ . - 1, data=saratoga_train) %>%
data.frame(xtrain)
xtest = model.matrix(~ . - 1, data=saratoga_test) %>%
data.frame(xtest)
ytrain = saratoga_train$price
ytest = saratoga_test$price
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train) %>%
data.frame(xtilde_train)
xtilde_test = scale(xtest, scale = scale_train) %>%
data.frame(xtilde_test)
knn_saratoga = knnreg(price ~ lotSize, data=xtilde_train_df, k=200)
modelr::rmse(knn_saratoga, xtilde_test_df)
head(xtrain, 2)
head(xtilde_train_df, 2)
